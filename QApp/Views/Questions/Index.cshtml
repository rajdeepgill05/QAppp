

@model PagedList.IPagedList<QApp.Models.Question>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Questions";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().User.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Title)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.First().Created)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.First().Votes)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.User.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Votes)
            </td>
            <td>
                @Html.ActionLink("Post an Answer", "Create", "Answers", new { Qid = item.Id }, new { @class = "control-label col-md-2" })|
                @Html.ActionLink("Comment", "Create", "CommentsOnQuestions", new { Qid = item.Id }, new { @class = "control-label col-md-2" })|
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))